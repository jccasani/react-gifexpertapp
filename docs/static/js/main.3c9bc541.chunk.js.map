{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategorias","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","values","type","value","onChange","target","getGifs","categoria","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","image","GifExpertApp","categorias","divRoot","document","getElementById","ReactDOM","render"],"mappings":"mMAmCeA,EAhCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EAEDC,mBAAS,IAFR,mBAE9BC,EAF8B,KAElBC,EAFkB,KAkBrC,OACI,sBAAMC,SAXS,SAACC,GAChBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAO,IACxBR,GAAc,SAAAS,GAAM,OAAIP,GAAJ,mBAAkBO,OACtCN,EAAc,MAMlB,SACI,uBACAO,KAAK,OACLC,MAAOT,EACPU,SAnBgB,SAACP,GACrBF,EAAcE,EAAEQ,OAAOF,a,+BCPlBG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGEA,EAAKC,OAHP,uBAGZC,EAHY,EAGZA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAM,IAAD,EACvB,MAAO,CACHC,GAAGD,EAAIC,GACPC,MAAMF,EAAIE,MACVV,IAAG,UAACQ,EAAIG,cAAL,aAAC,EAAYC,iBAAiBZ,QATtB,kBAYZM,GAZY,4CAAH,sDCCPO,EAAc,SAAC,GAAiB,IAAhBH,EAAe,EAAfA,MAAMV,EAAS,EAATA,IAC/B,OACI,sBAAKc,UAAU,6CAAf,UACI,qBACAC,IAAKf,EACLgB,IAAKN,IAET,4BAAIA,QCLCO,EAAU,SAAC,GAAiB,IAAhBnB,EAAe,EAAfA,UAAe,ECFZ,SAACA,GAAe,IAAD,EAEbd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ2B,mBAEhCC,EAFgC,KAEzBC,EAFyB,KAiBvC,OAVAC,qBAAU,WACNxB,EAAQC,GACPwB,MAAK,SAAAC,GACFH,EAAS,CACLf,KAAKkB,EACLL,SAAQ,SAGlB,CAACpB,IAEIqB,EDPiBK,CAAa1B,GAA7Ba,EAR4B,EAQjCN,KAAYa,EARqB,EAQrBA,QAEf,OACI,qCACI,oBAAIJ,UAAU,oCAAd,SAAmDhB,IAClDoB,GAAW,mBAAGJ,UAAU,mCAAb,qBACZ,qBAAKA,UAAU,YAAf,SAEQH,EAAOJ,KAAI,SAAAkB,GACP,OAAQ,cAAC,EAAD,eAEJA,GADCA,EAAMhB,aESnBiB,EA1BK,WAAI,MAIW1C,mBAAS,CAAC,cAJrB,mBAIlB2C,EAJkB,KAIN5C,EAJM,KAUrB,OAAO,qCACH,8CACA,cAAC,EAAD,CAAaA,cAAeA,IAC5B,uBAEA,6BAEQ4C,EAAWpB,KACP,SAAAT,GAAS,OAAK,cAAC,EAAD,CAEVA,UAAWA,GADNA,YClBvB8B,G,MAAUC,SAASC,eAAe,SACxCC,IAASC,OAAO,cAAC,EAAD,IAAiBJ,K","file":"static/js/main.3c9bc541.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategorias}) => {\r\n\r\n    const [inputValue, setInputValue] = useState(\"\");\r\n\r\n    const handleInputChange=(e)=>{\r\n        setInputValue(e.target.value);\r\n    };\r\n\r\n    const handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n\r\n        if(inputValue.trim().length>2){\r\n            setCategorias(values =>[inputValue,...values]);\r\n            setInputValue(\"\");\r\n        }\r\n        \r\n    };\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            <input \r\n            type=\"text\"\r\n            value={inputValue}\r\n            onChange={handleInputChange}\r\n            />\r\n        </form>\r\n    \r\n    )};\r\n\r\nAddCategory.propTypes = {\r\n    setCategorias:PropTypes.func.isRequired\r\n};\r\nexport default AddCategory;\r\n","\r\nexport const getGifs = async(categoria)=>{\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(categoria) }&limit=10&api_key=Y5DhUrYwurXBNogyaFDK6vQ26NA98xsv`;\r\n    const resp = await fetch(url);\r\n    const {data} = await resp.json();\r\n\r\n    const gifs = data.map(img=>{\r\n        return {\r\n            id:img.id,\r\n            title:img.title,\r\n            url:img.images?.downsized_medium.url      }\r\n    });\r\n\r\n    return gifs;\r\n    // setImages(gifs);\r\n }","import React from 'react'\r\n\r\nexport const GifGridItem = ({title,url}) => {\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeInLeft\">\r\n            <img \r\n            src={url}\r\n            alt={title}\r\n            />\r\n        <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs';\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({categoria}) => {\r\n\r\n// const [images, setImages] = useState([]);\r\n// useEffect(()=>{// lo que esta dentro solo se ejecuta una sola vez\r\n//     getGifs(categoria)\r\n//     .then(img => setImages(img));\r\n// },[categoria]); //si la categoria cambia se vulve a ejecutar\r\n\r\nconst {data:images,loading}=useFetchGifs(categoria);\r\n\r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\">{categoria}</h3>\r\n            {loading && <p className=\"animate__animated animate__flash\">Loading</p>}\r\n            <div className=\"card-grid\">\r\n            {\r\n                    images.map(image =>{\r\n                        return (<GifGridItem\r\n                        key={image.id}\r\n                        {...image}\r\n                        />)\r\n                    })\r\n                }\r\n            </div>\r\n                \r\n           \r\n        </>\r\n    )\r\n}\r\n","import {useState,useEffect} from 'react'\r\nimport { getGifs } from \"../helpers/getGifs\";\r\nexport const useFetchGifs = (categoria) => {\r\n\r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect(()=>{\r\n        getGifs(categoria)\r\n        .then(imgs=>{\r\n            setstate({\r\n                data:imgs,\r\n                loading:false\r\n            })\r\n        })\r\n    },[categoria]);\r\n\r\n    return state;\r\n}\r\n","import React,{useState} from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport AddCategory  from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = ()=>{\r\n//no se hace asi\r\n    //const categorias =['One Punch','Dragon Ball super','Samurai X','Naruto'];\r\n\r\nconst [categorias, setCategorias] = useState(['One Punch']);\r\n\r\n// const handleAdd=()=>{\r\n//     setCategorias(values =>[...values,'Naruto']); \r\n// }\r\n    \r\n    return <>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategorias={setCategorias}/>\r\n        <hr/>\r\n\r\n        <ol>\r\n            {\r\n                categorias.map(\r\n                    categoria => (<GifGrid \r\n                        key={categoria}\r\n                        categoria={categoria} />)\r\n                  )\r\n            }\r\n        </ol>\r\n    </>;\r\n};\r\nexport default  GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\n\nimport './index.css';\n\nconst divRoot = document.getElementById('root');\nReactDOM.render(<GifExpertApp />,divRoot);\n\n\n"],"sourceRoot":""}